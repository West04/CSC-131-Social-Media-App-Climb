# This "input" configures a global authorization rule to enable public access to
# all models in this schema. Learn more about authorization rules here: https://docs.amplify.aws/cli/graphql/authorization-rules

input AMPLIFY { globalAuthRule: AuthRule = { allow: public } } # FOR TESTING ONLY!

# Schema defining the User entity and its relationships
type User @model {
    id: ID!
    # Unique identifier for the user, automatically generated by AWS AppSync.

    username: String!
    # Username of the user. Required field.

    email: String!
    # Email address of the user. Required field.

    posts: [Post] @hasMany(indexName: "byUser", fields: ["id"])
    # A list of posts authored by the user.
    # Defines a one-to-many relationship where this user's 'id' is referenced in the 'createdByID' field of the Post entity.
    # Uses the 'byUser' index to optimize queries for fetching posts by a specific user.

    createdAt: AWSDateTime
    # Timestamp for when the user record was created.

    updatedAt: AWSDateTime
    # Timestamp for the last update to the user record.
}

# Schema defining the Post entity and its relationships
type Post @model {
    id: ID!
    # Unique identifier for the post, automatically generated by AWS AppSync.

    title: String!
    # Title of the post. Required field.

    content: String!
    # Content/body of the post. Required field.

    likes: Int!
    # Number of likes the post has received. Defaults to 0.

    createdByID: ID! @index(name: "byUser")
    # Foreign key linking the post to the user who created it.
    # The 'byUser' index allows efficient queries for posts by a specific user.

    createdBy: User @belongsTo(fields: ["createdByID"])
    # Establishes a many-to-one relationship, linking this post to its creator (a User entity).
    # Relies on the 'createdByID' field to reference the related User.

    topicID: ID! @index(name: "byTopic")
    # Foreign key linking the post to its topic.
    # The 'byTopic' index allows efficient queries for posts within a specific topic.

    topic: Topic @belongsTo(fields: ["topicID"])
    # Establishes a many-to-one relationship, linking this post to its associated topic.
    # Relies on the 'topicID' field to reference the related Topic.

    createdAt: AWSDateTime
    # Timestamp for when the post record was created.

    updatedAt: AWSDateTime
    # Timestamp for the last update to the post record.
}

# Schema defining the Topic entity and its relationships
type Topic @model {
    id: ID!
    # Unique identifier for the topic, automatically generated by AWS AppSync.

    title: String!
    # Title of the topic. Required field.

    posts: [Post] @hasMany(indexName: "byTopic", fields: ["id"])
    # A list of posts associated with this topic.
    # Defines a one-to-many relationship where this topic's 'id' is referenced in the 'topicID' field of the Post entity.
    # Uses the 'byTopic' index to optimize queries for fetching posts by a specific topic.

    createdAt: AWSDateTime
    # Timestamp for when the topic record was created.

    updatedAt: AWSDateTime
    # Timestamp for the last update to the topic record.
}
